return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 1000
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 1000
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 1000
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 1000
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 1000
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 1000
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 1000
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 10000
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 10, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 1000
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
gen.ci.med = function(n = 100, N = 201, parm.int = 0) {
data = rnorm(N)
normal.ll <- function(mean, sd){
fs <- dnorm(x = data, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = mean(data), sd = sqrt(var(data))),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
mean = coef(fit_norm)[1]
sd = coef(fit_norm)[2]
meds = rbeta(n, 101, 101) %>% qnorm(mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
ci = quantile(meds, c(0.025, 0.975))
return (ci[1] < parm.int & ci[2] > parm.int)
}
ci.contain = NA
repeat_num = 100
for(i in 1:repeat_num){
ci.contain[i] = gen.ci.med()
}
mean(ci.contain)
