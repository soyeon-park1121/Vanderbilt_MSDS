sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, asp = 1, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot for the simulated data of the median and theoretical sampling")
abline(0,1)
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, asp = 1, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
?plot
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, asp = 1, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, asp = 1, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, asp = 1, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, asp = 10, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, asp = 1, xlab = "Theoretical quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
# The sampling distribution of the sample max
sample <- NA
for(i in 1:200) {
sample[i] = max(rnorm(200))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(200-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
# QQ plot for simulated data from the sampling distribution of the sample max and the theoretical largest order statistic distribution.
x <- qorder(seq(0.01, 0.99, by = 0.01))
y <- quantile(sample, probs = seq(0.01, 0.99, by = 0.01))
plot(x, y, asp = 1, main = "QQ plot for the sample max and the theoretical largest order statistic", xlab = "The theoretical largest order statistic quantile", ylab = "The sample max quantile")
abline(0,1)
# The sampling distribution of the sample max
sample <- NA
for(i in 1:200) {
sample[i] = max(rnorm(200))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(200-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
# QQ plot for simulated data from the sampling distribution of the sample max and the theoretical largest order statistic distribution.
x <- qorder(seq(0.01, 0.99, by = 0.01))
y <- quantile(sample, probs = seq(0.01, 0.99, by = 0.01))
plot(x, y, main = "QQ plot for the sample max and the theoretical largest order statistic", xlab = "The theoretical largest order statistic quantile", ylab = "The sample max quantile")
abline(0,1)
# The sampling distribution of the sample max
sample <- NA
for(i in 1:200) {
sample[i] = max(rnorm(200))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(200-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
# QQ plot for simulated data from the sampling distribution of the sample max and the theoretical largest order statistic distribution.
x <- qorder(seq(0.01, 0.99, by = 0.01))
y <- quantile(sample, probs = seq(0.01, 0.99, by = 0.01))
plot(x, y, asp = 1, main = "QQ plot for the sample max and the theoretical largest order statistic", xlab = "The theoretical largest order statistic quantile", ylab = "The sample max quantile")
abline(0,1)
sample <- NA
for(i in 1:200){
sample[i] = median(rnorm(200))
}
x <- qnorm((1:200)/200)
y <- quantile(sample, probs = (1:200)/200)
plot(x,y, asp = 1, xlab = "Theoretical Quantile", ylab = "Sample Quantile", main = "QQ plot:simulated data of the median and theoretical sampling")
abline(0,1)
random_sample <- rexp(100)
q_candidate <- qexp
x <- q_candidate((1:200)/200)
y <- quantile(random_sample, probs = (1:200)/200)
plot(x,y, asp = 1)
abline(0,1)
random_sample <- rexp(1000)
q_candidate <- qexp
x <- q_candidate((1:200)/200)
y <- quantile(random_sample, probs = (1:200)/200)
plot(x,y, asp = 1)
abline(0,1)
random_sample <- rexp(200)
q_candidate <- qexp
x <- q_candidate((1:200)/200)
y <- quantile(random_sample, probs = (1:200)/200)
plot(x,y, asp = 1)
abline(0,1)
random_sample <- rexp(200)
q_candidate <- qexp
x <- q_candidate((1:200)/200)
y <- quantile(random_sample, probs = (1:200)/200)
plot(x,y, asp = 1)
abline(0,1)
random_sample <- rexp(200)
q_candidate <- qexp
x <- q_candidate((1:200)/200)
y <- quantile(random_sample, probs = (1:200)/200)
plot(x,y, asp = 1)
abline(0,1)
random_sample <- rexp(200)
q_candidate <- qexp
x <- q_candidate((1:200)/200)
y <- quantile(random_sample, probs = (1:200)/200)
plot(x,y, asp = 1)
abline(0,1)
random_sample <- rexp(200)
q_candidate <- qexp
x <- q_candidate((1:200)/200)
y <- quantile(random_sample, probs = (1:200)/200)
plot(x,y, asp = 1)
abline(0,1)
random_sample <- rexp(200)
q_candidate <- qexp
x <- q_candidate((1:200)/200)
y <- quantile(random_sample, probs = (1:200)/200)
plot(x,y, asp = 1)
abline(0,1)
# Sampling Distribution by Simulation
N <- 200
M <- 1000
medians <- rep(NA, M)
for(i in 1:M){
medians <- median(rnorm(N))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(100-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
# QQ plot for simulated data from the sampling distribution of the sample max and the theoretical largest order statistic distribution.
x <- qorder(seq(0.01, 0.99, by = 0.01))
y <- quantile(medians, probs = seq(0.01, 0.99, by = 0.01))
plot(x, y, asp = 1, main = "QQ plot for the sample max and the theoretical largest order statistic", xlab = "The theoretical largest order statistic quantile", ylab = "The sample max quantile")
abline(0,1)
# Sampling Distribution by Simulation
N <- 200
M <- 1000
medians <- rep(NA, M)
for(i in 1:M){
medians <- median(rnorm(N))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(100-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
# QQ plot for simulated data from the sampling distribution of the sample max and the theoretical largest order statistic distribution.
x <- qorder(seq(0.01, 0.99, by = 0.01))
y <- quantile(medians, probs = seq(0.01, 0.99, by = 0.01))
plot(x, y, asp = 1, main = "QQ plot for the sample max and the theoretical largest order statistic", xlab = "The theoretical largest order statistic quantile", ylab = "The sample max quantile")
abline(0,1)
# Sampling Distribution by Simulation
N <- 200
M <- 1000
medians <- rep(NA, M)
for(i in 1:M){
medians <- median(rnorm(N))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(100-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
# Sampling Distribution by Simulation
N <- 200
M <- 1000
medians <- rep(NA, M)
for(i in 1:M){
medians <- median(rnorm(N))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(100-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
quants_sample <- quantile(medians, seq(0.01, 0.99, by = 0.01))
quants_analytic <- qorder(seq(0.01, 0.99, by = 0.01))
plot(quants_analytic, quants_sample)
# Sampling Distribution by Simulation
N <- 200
M <- 1000
medians <- rep(NA, M)
for(i in 1:M){
medians[i] <- median(rnorm(N))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(100-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
quants_sample <- quantile(medians, seq(0.01, 0.99, by = 0.01))
quants_analytic <- qorder(seq(0.01, 0.99, by = 0.01))
plot(quants_analytic, quants_sample)
# Sampling Distribution by Simulation
N <- 200
M <- 1000
medians <- rep(NA, M)
for(i in 1:M){
medians[i] <- median(rnorm(N))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(100-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
quants_sample <- quantile(medians, seq(0.01, 0.99, by = 0.01))
quants_analytic <- qorder(seq(0.01, 0.99, by = 0.01))
plot(quants_analytic, quants_sample, main = "QQ plot for the sample max and the theoretical largest order statistic", xlab = "The theoretical largest order statistic quantile", ylab = "The sample max quantile")
abline(0,1)
x = seq(-1, 1, by = 0.001)
plot(x, dorder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
porder <- function(x, n, k, dist, ...) {
pf <- get(paste0("p", dist))
pbinom(k-1, n, pf(x, 0, 1), lower.tail = FALSE)
}
x = seq(-1, 1, by = 0.001)
plot(x, dorder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
qorder <- function(p, n, k, dist, ...){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x, n, k) - p[i]}, c(-100, 100))$root
}
out
}
x = seq(-1, 1, by = 0.001)
plot(x, dorder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
dorder <- function(x, k, n, dist, ...){
pf <- get(paste0("p", dist))
df <- get(paste0("d", dist))
k*choose(n,k)*
(pf(x))^(k-1)*
(1-pf(x))^(n-k)*
df(x)
}
porder <- function(x, n, k, dist, ...) {
pf <- get(paste0("p", dist))
pbinom(k-1, n, pf(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p, n, k, dist, ...){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x, n, k) - p[i]}, c(-100, 100))$root
}
out
}
x = seq(-1, 1, by = 0.001)
plot(x, dorder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
x = seq(-1, 1, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(0.01, 1, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(0.0, 1, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-1, 1, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-1, 1, by = 0.001)
plot(x, porder(x, n = 200, k = 2, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-1, 1, by = 0.001)
plot(x, porder(x, n = 200, k = 100, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-1, 1, by = 0.001)
plot(x, porder(x, n = 200, k = 150, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-100, 100, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-10, 10, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-10, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-5,5, by = 0.001)
plot(x, dorder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
dorder <- function(x, k, n, dist = "norm", ...){
pf <- get(paste0("p", dist))
df <- get(paste0("d", dist))
k*choose(n,k)*
(pf(x, ...))^(k-1)*
(1-pf(x, ...))^(n-k)*
df(x, ...)
}
porder <- function(x, n, k, dist, ...) {
pf <- get(paste0("p", dist))
pbinom(k-1, n, pf(x, ...), lower.tail = FALSE)
}
qorder <- function(p, n, k, dist, ...){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x, n, k, dist, ...) - p[i]}, c(-100, 100))$root
}
out
}
x = seq(-5,5, by = 0.001)
plot(x, dorder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
# The sampling distribution of the sample max
sample <- NA
for(i in 1:200) {
sample[i] = max(rnorm(200))
}
# The theoretical largest order statistic distribution
porder <- function(x) {
pbinom(200-1, 200, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x) - p[i]}, c(-100, 100))$root
}
out
}
# QQ plot for simulated data from the sampling distribution of the sample max and the theoretical largest order statistic distribution.
x <- qorder(seq(0.01, 0.99, by = 0.01))
y <- quantile(sample, probs = seq(0.01, 0.99, by = 0.01))
plot(x, y, asp = 1, main = "QQ plot for the sample max and the theoretical largest order statistic", xlab = "The theoretical largest order statistic quantile", ylab = "The sample max quantile")
abline(0,1)
x = seq(-5,5, by = 0.001)
plot(x, dorder(x, n = 200, k = 1), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1, dist = "norm"), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
porder <- function(x, n, k, dist = "norm", ...) {
pf <- get(paste0("p", dist))
pbinom(k-1, n, pf(x, ...), lower.tail = FALSE)
}
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
dorder <- function(x, n, k){
k*choose(n,k)*
(pnorm(x))^(k-1)*
(1-pnorm(x))^(n-k)*
dnorm(x)
}
porder <- function(x, n, k) {
pbinom(k-1, n, pnorm(x, 0, 1), lower.tail = FALSE)
}
qorder <- function(p, n, k){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x, n, k) - p[i]}, c(-100, 100))$root
}
out
}
sample <- NA
for(i in 1:200) {
sample[i] = max(rnorm(200))
}
x <- qorder(seq(0.01, 0.99, by = 0.01), n = 200, k = 200)
y <- quantile(sample, probs = seq(0.01, 0.99, by = 0.01))
plot(x, y, asp = 1, main = "QQ plot for the sample max and the theoretical largest order statistic", xlab = "The theoretical largest order statistic quantile", ylab = "The sample max quantile")
abline(0,1)
x = seq(-5,5, by = 0.001)
plot(x, dorder(x, n = 200, k = 1), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
x = seq(-5,5, by = 0.001)
plot(x, dorder(x, n = 200, k = 1), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
dorder <- function(x, k, n, dist = "norm", ...){
pf <- get(paste0("p", dist))
df <- get(paste0("d", dist))
k*choose(n,k)*
(pf(x, ...))^(k-1)*
(1-pf(x, ...))^(n-k)*
df(x, ...)
}
porder <- function(x, n, k, dist = "norm", ...) {
pf <- get(paste0("p", dist))
pbinom(k-1, n, pf(x, ...), lower.tail = FALSE)
}
qorder <- function(p, n, k, dist = "norm", ...){
out <- p
for(i in seq_along(p)) {
out[i] <- uniroot(function(x){porder(x, n, k, dist, ...) - p[i]}, c(-100, 100))$root
}
out
}
x = seq(-5,5, by = 0.001)
plot(x, dorder(x, n = 200, k = 1), type = "l", main = "PDF of Min Order Statistic of Standard Normal Density", ylab = "Density Probability", xlab = "X(1)")
x = seq(-5, 5, by = 0.001)
plot(x, porder(x, n = 200, k = 1), type = "l", main = "CDF of Min Order Statistic of Standard Normal Density", ylab = "Probability", xlab = "X(1)")
pnorm(100)
pnorm(99)
pnorm(5)
Hmisc::getGdata(nhgh)
Hmisc::getGdata(nhgh)
Hmisc::getGdata(nhgh)
Hmisc::getHdata(nhgh)
