pnbinom(3, 4, 0.55)
x <- seq(0.5, 1, by = 0.001)
y <= pnbinom(3, 4, x)
x <- seq(0.5, 1, by = 0.001)
y <- pnbinom(3, 4, x)
plot(x, y, main = "Probability of winning the World Series", xlab = "Probability of the Braves winning a head-to-head matchup", ylab = "Pr(the Braves Win World Series)", type = "l")
x <- seq(0, 1, by = 0.001)
y <- pnbinom(3, 4, x)
plot(x, y, main = "Probability of winning the World Series", xlab = "Probability of the Braves winning a head-to-head matchup", ylab = "Pr(the Braves Win World Series)", type = "l")
x <- seq(0.5, 1, by = 0.001)
y <- pnbinom(3, 4, x)
plot(x, y, main = "Probability of winning the World Series", xlab = "Probability of the Braves winning a head-to-head matchup", ylab = "Pr(the Braves Win World Series)", type = "l")
pnbinom((x-1)/2, ((x-1)/2)+1, 0.55) >= 0.8
x <- (1, 100, by = 2)
x <- seq(1, 100, by = 2)
pnbinom((x-1)/2, ((x-1)/2)+1, 0.55) >= 0.8
x <- seq(1, 100, by = 2)
pnbinom((x-1)/2, ((x-1)/2)+1, 0.55) >= 0.8
if(x == TRUE, x, 0)
x <- seq(1, 100, by = 2)
pnbinom((x-1)/2, ((x-1)/2)+1, 0.55) >= 0.8
ifelse(x = TRUE, x, 0)
x <- seq(1, 100, by = 2)
pnbinom((x-1)/2, ((x-1)/2)+1, 0.55) >= 0.8
x = TRUE
x <- seq(1, 100, by = 2)
pnbinom((x-1)/2, ((x-1)/2)+1, 0.55) >= 0.8
?if
x = TRUE
x <- seq(1, 100, by = 2)
pnbinom((x-1)/2, ((x-1)/2)+1, 0.55) >= 0.8
?if()
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
x <- seq(1, 100, by = 2)
pnbinom((x-1)/2, ((x-1)/2)+1, 0.55) >= 0.8
x = TRUE
prob
prob <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
}
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
}
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
}
num_win + num_loss
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
}
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
}
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
}
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
prob_win <- probnom(num_loss, num_win, 0.55)
}
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
prob_win <- probinom(num_loss, num_win, 0.55)
}
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
prob_win <- pnbinom(num_loss, num_win, 0.55)
}
num_win + num_loss
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
prob_win <- pnbinom(num_loss, num_win, 0.55)
}
num_win + num_loss
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 1
num_win <- num_win + 1
prob_win <- pnbinom(num_loss, num_win, 0.55)
}
num_win + num_loss
x <- seq(0.5, 1, by = 0.001)
prob_win <- 0
num_loss <- 1
num_win <- 2
while(prob_win < 0.8){
num_loss <- num_loss + 2
num_win <- num_win + 2
}
prob_win <- seq(0.5, 1, by = 0.001)
short_series <- NA
for(i in 1:length(prob_win)){
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
prob_short <- pnbinom(num_loss, num_win, prob_win[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_short >= 0.8)[1]]
}
plot(prob_win, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
prob_braves <- seq(0.5, 1, by = 0.001)
short_series <- NA
for(i in 1:length(prob_braves)){
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_short >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
prob_braves <- seq(0.5, 1, by = 0.001)
short_series <- NA
for(i in 1:length(prob_braves)){
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
num_win <- seq(1, 1000, by = 1)
(num_win <- seq(1, 1000, by = 1))
(num_win <- seq(1, 1000, by = 1))
class(num_win)
prob_braves <- seq(0.5, 1, by = 0.001)
prob_braves
prob_braves <- seq(0.5, 1, by = 0.001)
short_series <- NA
for(i in 1:length(prob_braves)){
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
prob_braves <- seq(0, 1, by = 0.001)
short_series <- NA
for(i in 1:length(prob_braves)){
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
prob_braves <- seq(0.5, 1, by = 0.001)
short_series <- NA
for(i in 1:length(prob_braves)){
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
num_win <- seq(1, 1000, by = 1)
num_win <- seq(1, 1000, by = 1)
prob_braves <- seq(0.5, 1, by = 0.001)
short_series <- NA
for(i in 1:length(prob_braves)){
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
prob_braves <- seq(0.5, 1, by = 0.001)
short_series <- NA
for(i in 1:length(prob_braves)){
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
prob_braves <- seq(0.5, 1, by = 0.001)
short_series <- NA
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
for(i in 1:length(prob_braves)){
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
pnbinom(3, 4, 0.55)
pnbinom(3, 4, 0.45)
1- pnbinom(3, 4, 0.45)
pnbinom(3, 4, 0.55)
pnbinom(3, 4, 0.45)
x <- seq(0, 1, by = 0.001)
y <- pnbinom(3, 4, x)
plot(x, y, main = "Probability of winning the World Series", xlab = "Probability of the Braves winning a head-to-head matchup", ylab = "Pr(the Braves Win World Series)", type = "l")
prob_braves <- seq(0, 1, by = 0.001)
short_series <- NA
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
for(i in 1:length(prob_braves)){
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
prob_win <- NA
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 1
num_win <- num_win + 1
prob_win <- pnbinom(num_loss, num_win, 0.55)
}
prob_win <- 0
num_loss <- (9-1)/2
num_win <- ((9-1)/2)+1
while(prob_win < 0.8){
num_loss <- num_loss + 1
num_win <- num_win + 1
prob_win <- pnbinom(num_loss, num_win, 0.55)
}
num_win + num_loss
prob_win <- NA
num_games <- seq(9, 100, 2)
done <- FALSE
for(i in 1:length(new_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
prob_win[i]
}
prob_win <- NA
num_games <- seq(9, 100, 2)
done <- FALSE
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
prob_win[i]
}
prob_win <- NA
num_games <- seq(9, 100, 2)
done <- FALSE
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
prob_win[i]
break
}
prob_win[i]
}
prob_win <- NA
num_games <- seq(9, 100, 2)
done <- FALSE
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
prob_win[i]
break
}
print(prob_win[i])
}
prob_win <- NA
num_games <- seq(9, 100, 2)
done <- FALSE
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
print(prob_win[i])
}
prob_win <- NA
num_games <- seq(9, 100, 2)
done <- FALSE
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
print(prob_win[i])
}
prob_win <- NA
num_games <- seq(9, 100, 2)
done <- FALSE
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
print(prob_win[i])
}
prob_win <- NA
num_games <- seq(9, 100, 2)
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
print(prob_win[i])
}
prob_win <- NA
num_games <- seq(9, 100, 2)
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
print(prob_win[i])
}
prob_win <- NA
num_games <- seq(9, 100, 2)
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
print(prob_win[i])
}
prob_win <- NA
num_games <- seq(9, 100, 2)
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
num_games
}
prob_win <- NA
num_games <- seq(9, 100, 2)
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
break
}
print(paste(num_games[i]))
}
prob_win <- NA
num_games <- seq(9, 100, 2)
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
print(num_games[i])
break
}
}
pbinom(4, 5, 0.55)
prob_win <- NA
num_games <- seq(9, 100, 2)
for(i in 1:length(num_games)){
num_lose <- (num_games[i] - 1) / 2
num_wins <- (num_games[i] + 1) / 2
prob_win[i] <- pnbinom(num_lose, num_wins, 0.55)
if(prob_win[i] >= 0.8){
print(num_games[i])
break
}
}
prob_braves <- seq(0.5, 1, by = 0.001)
short_series <- NA
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
for(i in 1:length(prob_braves)){
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
dnbinom(0, 4, 0.55) + dnbinom(1, 4, 0.55) + dnbinom(2, 4, 0.55) + dnbinom(3, 4, 0.55)
dnbinom(2, 3, 0.3)
pnbinom(2, 3, 0.5)
x <- seq(0, 1, by = 0.001)
y <- pnbinom(3, 4, x)
plot(x, y, main = "Probability of winning the World Series", xlab = "Probability of the Braves winning a head-to-head match up", ylab = "Pr(the Braves Win World Series)", type = "l")
dnbinom(3, 4, 0.45)
dnbinom(3, 4, 0.55)
dnbinom(3, 4, 0.55)
dnbinom(3, 4, 0.45)
?sample
sample(10)
sample(10) + 100
sample(10) + 100:101
sample(10)
sample(10)
sample(10)
sample(30)
100:101
100:102
sample(10) + 100:102
dnbinom(3, 4, 0.55)
dnbinom)3, 4, 0.45)
dnbinom(3, 4, 0.45)
prob_braves <- seq(0.5, 1, by = 0.001)
short_series <- NA
num_win <- seq(1, 1000, by = 1)
num_loss <- num_win - 1
for(i in 1:length(prob_braves)){
prob_win <- pnbinom(num_loss, num_win, prob_braves[i])
length_series <- num_win + num_loss
short_series[i] <- length_series[which(prob_win >= 0.8)[1]]
}
plot(prob_braves, short_series, type = "l", main = "Shortest series so that P(win WS given p)>= 0.8", xlab = "Probability of the Braves winning a head-to head matchup", ylab = "Series Length")
class(num_games)
prob_win <- NA
num_games <- seq(9, 100, 2)
class(num_games)
