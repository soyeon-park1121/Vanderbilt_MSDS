theo_qs <- qgamma(qs, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2])
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Gamma Distrbution; MLE",
xlab = "The sample quantile", ylab = "The theoretical Gamma distribution quantile")
abline(0,1)
# Weibull Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$gh, qs)
theo_qs <- qweibull(qs, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2])
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Weibull Distrbution; MLE",
xlab = "The sample quantile", ylab = "The theoretical Weibull distribution quantile")
abline(0,1)
# Normal Distribution
qnorm(.5, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
# Gamma Distribution
qgamma(.5, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2])
# Weibull Distribution
qweibull(.5, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2])
# Normal Distribution
M <- 5000
N <- 1000
out <- rnorm(N*M, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2]) %>% array(dim = c(M,N))
sample_normal_dist_mle <- apply(out, 1, median)
hist(sample_normal_dist_mle, breaks = 100, main = "Histogram of GH Sample Normal Distribution; MLE", xlab = "GH", freq = FALSE)
# Gamma Distribution
M <- 5000
N <- 1000
out <- rgamma(N*M, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2]) %>% array(dim = c(M,N))
sample_gamma_dist_mle <- apply(out, 1, median)
hist(sample_gamma_dist_mle, breaks = 100, main = "Histogram of GH Sample Gamma Distribution; MLE", xlab = "GH", freq = FALSE)
# Weibull Distribution
M <- 5000
N <- 1000
out <- rweibull(N*M, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2]) %>% array(dim = c(M,N))
sample_wbll_dist_mle <- apply(out, 1, median)
hist(sample_wbll_dist_mle, breaks = 100, main = "Histogram of GH Sample Weibull Distribution; MLE", xlab = "GH", freq = FALSE)
# Normal Distribution
quantile(sample_normal_dist_mle, c(0.05/2, 1 - 0.05/2))
# Gamma Distribution
quantile(sample_gamma_dist_mle, c(0.05/2, 1 - 0.05/2))
# Weibull Distribution
quantile(sample_wbll_dist_mle, c(0.05/2, 1 - 0.05/2))
# Normal Distribution
(mm.norm.mean = mean(d1$ht))
(mm.norm.sd = sd(d1$ht))
# Gamma Distribution
(mm.gam.shape = mean(d1$ht)^2 / var(d1$ht))
(mm.gam.scale = var(d1$ht) / mean(d1$ht))
# Weibull Distribution
# Weibull Distribution Mean...(1)
mean.wbll = function(lambda, k){
lambda * gamma(1 + 1/k)
}
# Weibull Distribution Variance...(2)
var.wbll = function(lambda, k) {
lambda^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Lambda definition in Mean of Weibull Distribution...(3)
lambda = function(sample.mean, k){
sample.mean / gamma(1 + 1/k)
}
# Combine (2) and (3)
var.wbll = function(sample.mean, k) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Find k value
find.var.wbll = function(sample.mean, k, sample.var) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2) - sample.var
}
x = seq(10, 100, by = 0.01)
plot(x, y = find.var.wbll(mean(d1$ht), k = x, sample.var = var(d1$ht)))
mm.wbll.opt <- optimize(f = function(x) {abs(find.var.wbll(k = x, mean(d1$ht), sample.var = var(d1$ht)))}, lower = 10, upper = 100)
((mm.wbll.k = mm.wbll.opt$minimum))
((mm.wbll.lambda = lambda(sample.mean = mean(d1$ht), k = mm.wbll.k)))
# Weibull Distribution
# Weibull Distribution Mean...(1)
mean.wbll = function(lambda, k){
lambda * gamma(1 + 1/k)
}
# Weibull Distribution Variance...(2)
var.wbll = function(lambda, k) {
lambda^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Lambda definition in Mean of Weibull Distribution...(3)
lambda = function(sample.mean, k){
sample.mean / gamma(1 + 1/k)
}
# Combine (2) and (3)
var.wbll = function(sample.mean, k) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Find k value
find.var.wbll = function(sample.mean, k, sample.var) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2) - sample.var
}
x = seq(10, 100, by = 0.01)
plot(x, y = find.var.wbll(mean(d1$ht), k = x, sample.var = var(d1$ht)))
mm.wbll.opt <- optimize(f = function(x) {abs(find.var.wbll(k = x, mean(d1$ht), sample.var = var(d1$ht)))}, lower = 10, upper = 100)
(mm.wbll.k = mm.wbll.opt$minimum)
(mm.wbll.lambda = lambda(sample.mean = mean(d1$ht), k = mm.wbll.k))
hist(d1$ht, main = "Height of Adult Females; MM", breaks = 100, freq = FALSE, xlab = "Height(cm)")
curve(dnorm(x, mm.norm.mean, mm.norm.sd), add = TRUE, col = "red", lwd = 3)
curve(dgamma(x, shape = mm.gam.shape, scale = mm.gam.scale), add = TRUE, col = "blue", lwd = 3)
curve(dweibull(x, shape = mm.wbll.k, scale = mm.wbll.lambda), add=TRUE, col = "green", lwd = 3)
legend("topleft", legend = c("Normal", "Gamma", "Weibull"), col = c("red", "blue", "green"), lty = 1:1, cex = 0.8)
# Normal Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$ht, qs)
theo_qs <- qnorm(qs, mean = mm.norm.mean, sd = mm.norm.sd)
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Normal Distrbution; MM",
xlab = "The sample quantile", ylab = "The theoretical Normal distribution quantile")
abline(0,1)
# Gamma Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$ht, qs)
theo_qs <- qgamma(qs, scale = mm.gam.scale, shape = mm.gam.shape)
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Gamma Distrbution; MM",
xlab = "The sample quantile", ylab = "The theoretical Gamma distribution quantile")
abline(0,1)
# Weibull Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$ht, qs)
theo_qs <- qweibull(qs, shape = mm.wbll.k, scale = mm.wbll.lambda)
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Weibull Distrbution; MM",
xlab = "The sample quantile", ylab = "The theoretical Weibull distribution quantile")
abline(0,1)
# Normal Distribution
qnorm(.5, mean = mm.norm.mean, sd = mm.norm.sd)
# Gamma Distribution
qgamma(.5, shape = mm.gam.shape, scale = mm.gam.scale)
# Weibull Distribution
qweibull(.5, shape = mm.wbll.k, scale = mm.wbll.lambda)
# Normal Distribution
M <- 5000
N <- 1000
out <- rnorm(N * M, mean = mm.norm.mean, sd = mm.norm.sd) %>% array(dim = c(M,N))
sample_dist_norm_ht <- apply(out, 1, median)
hist(sample_dist_norm_ht, breaks = 100, main = "Histogram of Hegiht Sample Normal Distribution; MM", xlab = "Height(cm)", freq = FALSE)
# Explore the data
hist(d1$ht, breaks = 100)
mean(d1$ht)
sd(d1$ht)
range(d1$ht)
# Normal Distribution
normal.ll <- function(mean, sd){
fs <- dnorm(x = d1$ht, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = 160, sd = 5),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
par(mfrow = c(1,2)); plot(profile(fit_norm), absVal = FALSE)
coef(fit_norm)
# Gamma Distribution
gamma.ll <- function(shape, scale){
fs <- dgamma(x = d1$ht, shape = shape, scale = scale, log = TRUE)
-sum(fs)
}
fit_gamma <- mle(
gamma.ll,
start = list(shape = 482, scale = 0.33),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
par(mfrow = c(1,2)); plot(profile(fit_gamma), absVal = FALSE)
coef(fit_gamma)
# Weibull Distribution
wbll.ll <- function(shape, scale){
fs <- dweibull(x = d1$ht, shape = shape, scale = scale, log = TRUE)
-sum(fs)
}
fit_wbll <- mle(
wbll.ll,
start = list(shape = 27, scale = 164),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
par(mfrow = c(1,2)); plot(profile(fit_wbll), absVal = FALSE)
coef(fit_wbll)
hist(d1$ht, breaks = 100, freq = FALSE, main = "Height of Adult Females; MLE", xlab = "Height(cm)")
curve(dnorm(x, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2]), col = "red", lwd = 3, add = TRUE)
curve(dgamma(x, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2]), col = "blue", lwd = 3, add = TRUE)
curve(dweibull(x, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2]), col = "green", lwd = 3, add = TRUE)
legend("topleft", legend = c("Normal", "Gamma", "Weibull"), col = c("red", "blue", "green"), lty = 1:1, cex = 0.8)
plot(ecdf(d1$ht), main = "CDF and eCDF of Height of Adult Females; MLE", lwd = 3)
curve(pnorm(x, mean = coef(param_hat)[1], sd = coef(param_hat)[2]), col = "red", lwd = 3, add = TRUE)
curve(pgamma(x, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2]), add = TRUE, col = "blue", lwd = 3)
curve(pweibull(x, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2]), add=TRUE, col = "green", lwd = 3)
legend("topleft", legend = c("eCDF of Height", "Normal CDF", "Gamma CDF", "Weibull CDF"), col = c("black", "red", "blue", "green"), lty = 1:1, cex = 0.8)
# Normal Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$ht, qs)
theo_qs <- qnorm(qs, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Normal Distrbution; MLE",
xlab = "The sample quantile", ylab = "The theoretical Normal distribution quantile")
abline(0,1)
# Gamma Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$ht, qs)
theo_qs <- qgamma(qs, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2])
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Gamma Distrbution; MLE",
xlab = "The sample quantile", ylab = "The theoretical Gamma distribution quantile")
abline(0,1)
# Weibull Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$ht, qs)
theo_qs <- qweibull(qs, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2])
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Weibull Distrbution; MLE",
xlab = "The sample quantile", ylab = "The theoretical Weibull distribution quantile")
abline(0,1)
# Normal Distribution
qnorm(.5, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
# Gamma Distribution
qgamma(.5, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2])
# Weibull Distribution
qweibull(.5, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2])
# Normal Distribution
M <- 5000
N <- 1000
out <- rnorm(N*M, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2]) %>% array(dim = c(M,N))
sample_normal_dist_mle <- apply(out, 1, median)
hist(sample_normal_dist_mle, breaks = 100, main = "Histogram of Hegiht Sample Normal Distribution; MLE", xlab = "Height(cm)", freq = FALSE)
# Gamma Distribution
M <- 5000
N <- 1000
out <- rgamma(N*M, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2]) %>% array(dim = c(M,N))
sample_gamma_dist_mle <- apply(out, 1, median)
hist(sample_gamma_dist_mle, breaks = 100, main = "Histogram of Hegiht Sample Gamma Distribution; MLE", xlab = "Height(cm)", freq = FALSE)
# Weibull Distribution
# Weibull Distribution Mean...(1)
mean.wbll = function(lambda, k){
lambda * gamma(1 + 1/k)
}
# Weibull Distribution Variance...(2)
var.wbll = function(lambda, k) {
lambda^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Lambda definition in Mean of Weibull Distribution...(3)
lambda = function(sample.mean, k){
sample.mean / gamma(1 + 1/k)
}
# Combine (2) and (3)
var.wbll = function(sample.mean, k) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Find k value
find.var.wbll = function(sample.mean, k, sample.var) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2) - sample.var
}
x = seq(10, 100, by = 0.01)
plot(x, y = find.var.wbll(mean(d1$gh), k = x, sample.var = var(d1$gh)), xlab = "k", ylab = "function (find.var.wbll)", main = "Function for variance of Weibull Distribution")
mm.wbll.opt <- optimize(f = function(x) {abs(find.var.wbll(k = x, mean(d1$gh), sample.var = var(d1$gh)))}, lower = 10, upper = 100)
(mm.wbll.k = mm.wbll.opt$minimum)
(mm.wbll.lambda = lambda(sample.mean = mean(d1$gh), k = mm.wbll.k))
# Weibull Distribution
# Weibull Distribution Mean...(1)
mean.wbll = function(lambda, k){
lambda * gamma(1 + 1/k)
}
# Weibull Distribution Variance...(2)
var.wbll = function(lambda, k) {
lambda^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Lambda definition in Mean of Weibull Distribution...(3)
lambda = function(sample.mean, k){
sample.mean / gamma(1 + 1/k)
}
# Combine (2) and (3)
var.wbll = function(sample.mean, k) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Find k value
find.var.wbll = function(sample.mean, k, sample.var) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2) - sample.var
}
x = seq(10, 100, by = 0.01)
plot(x, y = find.var.wbll(mean(d1$ht), k = x, sample.var = var(d1$ht)))
mm.wbll.opt <- optimize(f = function(x) {abs(find.var.wbll(k = x, mean(d1$ht), sample.var = var(d1$ht)))}, lower = 10, upper = 100)
(mm.wbll.k = mm.wbll.opt$minimum)
(mm.wbll.lambda = lambda(sample.mean = mean(d1$ht), k = mm.wbll.k))
# Weibull Distribution
# Weibull Distribution Mean...(1)
mean.wbll = function(lambda, k){
lambda * gamma(1 + 1/k)
}
# Weibull Distribution Variance...(2)
var.wbll = function(lambda, k) {
lambda^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Lambda definition in Mean of Weibull Distribution...(3)
lambda = function(sample.mean, k){
sample.mean / gamma(1 + 1/k)
}
# Combine (2) and (3)
var.wbll = function(sample.mean, k) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Find k value
find.var.wbll = function(sample.mean, k, sample.var) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2) - sample.var
}
x = seq(10, 100, by = 0.01)
plot(x, y = find.var.wbll(mean(d1$ht), k = x, sample.var = var(d1$ht)), main = "Function for variance of Weibull Distribution", xlab = "k", ylab = "Function(find.var.wbll)")
mm.wbll.opt <- optimize(f = function(x) {abs(find.var.wbll(k = x, mean(d1$ht), sample.var = var(d1$ht)))}, lower = 10, upper = 100)
(mm.wbll.k = mm.wbll.opt$minimum)
(mm.wbll.lambda = lambda(sample.mean = mean(d1$ht), k = mm.wbll.k))
?mle
?mle
library(stats4)
library(stats4)
?mle
median(d1$gh)
# Normal Distribution
qnorm(.5, mean = mm.norm.mean, sd = mm.norm.sd)
# Gamma Distribution
qgamma(.5, shape = mm.gam.shape, scale = mm.gam.scale)
# Weibull Distribution
qweibull(.5, shape = mm.wbll.k, scale = mm.wbll.lambda)
median(d1$ht)
# Normal Distribution
qnorm(.5, mean = mm.norm.mean, sd = mm.norm.sd)
# Gamma Distribution
qgamma(.5, shape = mm.gam.shape, scale = mm.gam.scale)
# Weibull Distribution
qweibull(.5, shape = mm.wbll.k, scale = mm.wbll.lambda)
median(d1$ht)
# Normal Distribution
qnorm(.5, mean = mm.norm.mean, sd = mm.norm.sd)
# Gamma Distribution
qgamma(.5, shape = mm.gam.shape, scale = mm.gam.scale)
# Weibull Distribution
qweibull(.5, shape = mm.wbll.k, scale = mm.wbll.lambda)
require(dplyr)
require(stats4)
Hmisc::getHdata(nhgh)
d1 <- nhgh %>%
filter(sex == "female") %>%
filter(age >= 18) %>%
select(gh, ht) %>%
filter(1:n()<=1000)
# Normal Distribution
(mm.norm.mean = mean(d1$gh))
(mm.norm.sd = sd(d1$gh))
# Gamma Distribution
(mm.gam.shape = mean(d1$gh)^2 / var(d1$gh))
(mm.gam.scale = var(d1$gh) / mean(d1$gh))
# Weibull Distribution
# Weibull Distribution Mean...(1)
mean.wbll = function(lambda, k){
lambda * gamma(1 + 1/k)
}
# Weibull Distribution Variance...(2)
var.wbll = function(lambda, k) {
lambda^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Lambda definition in Mean of Weibull Distribution...(3)
lambda = function(sample.mean, k){
sample.mean / gamma(1 + 1/k)
}
# Combine (2) and (3)
var.wbll = function(sample.mean, k) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2)
}
# Find k value
find.var.wbll = function(sample.mean, k, sample.var) {
lambda(sample.mean, k)^2 * (gamma(1 + 2/k) - (gamma(1 + 1/k))^2) - sample.var
}
x = seq(10, 100, by = 0.01)
plot(x, y = find.var.wbll(mean(d1$gh), k = x, sample.var = var(d1$gh)), xlab = "k", ylab = "function (find.var.wbll)", main = "Function for variance of Weibull Distribution")
mm.wbll.opt <- optimize(f = function(x) {abs(find.var.wbll(k = x, mean(d1$gh), sample.var = var(d1$gh)))}, lower = 10, upper = 100)
(mm.wbll.k = mm.wbll.opt$minimum)
(mm.wbll.lambda = lambda(sample.mean = mean(d1$gh), k = mm.wbll.k))
hist(d1$gh, main = "Glycohemoglobin of Adult Females; MM", breaks = 100, freq = FALSE, xlab = "Glycohemogolbin")
curve(dnorm(x, mm.norm.mean, mm.norm.sd), add = TRUE, col = "red", lwd = 3)
curve(dgamma(x, shape = mm.gam.shape, scale = mm.gam.scale), add = TRUE, col = "blue", lwd = 3)
curve(dweibull(x, shape = mm.wbll.k, scale = mm.wbll.lambda), add=TRUE, col = "green", lwd = 3)
legend("topleft", legend = c("Normal", "Gamma", "Weibull"), col = c("red", "blue", "green"), lty = 1:1, cex = 0.8)
plot(ecdf(d1$gh), main = "CDF and eCDF of GH of Adult Females; MM", lwd = 3, ylab = "Probability")
curve(pnorm(x, mm.norm.mean, mm.norm.sd), add = TRUE, col = "red", lwd = 3)
curve(pgamma(x, shape = mm.gam.shape, scale = mm.gam.scale), add = TRUE, col = "blue", lwd = 3)
curve(pweibull(x, shape = mm.wbll.k, scale = mm.wbll.lambda), add=TRUE, col = "green", lwd = 3)
legend("topleft", legend = c("eCDF of GH", "Normal CDF", "Gamma CDF", "Weibull CDF"), col = c("black", "red", "blue", "green"), lty = 1:1, cex = 0.8)
# Normal Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$gh, qs)
theo_qs <- qnorm(qs, mean = mm.norm.mean, sd = mm.norm.sd)
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Normal Distrbution; MM",
xlab = "The sample quantile", ylab = "The theoretical Normal distribution quantile")
abline(0,1)
# Gamma Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$gh, qs)
theo_qs <- qgamma(qs, scale = mm.gam.scale, shape = mm.gam.shape)
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Gamma Distrbution; MM",
xlab = "The sample quantile", ylab = "The theoretical Gamma distribution quantile")
abline(0,1)
# Weibull Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$gh, qs)
theo_qs <- qweibull(qs, shape = mm.wbll.k, scale = mm.wbll.lambda)
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Weibull Distrbution; MM",
xlab = "The sample quantile", ylab = "The theoretical Weibull distribution quantile")
abline(0,1)
median(d1$ht)
# Normal Distribution
qnorm(.5, mean = mm.norm.mean, sd = mm.norm.sd)
# Gamma Distribution
qgamma(.5, shape = mm.gam.shape, scale = mm.gam.scale)
# Weibull Distribution
qweibull(.5, shape = mm.wbll.k, scale = mm.wbll.lambda)
# Sample Median
median(d1$gh)
# Normal Distribution
qnorm(.5, mean = mm.norm.mean, sd = mm.norm.sd)
# Gamma Distribution
qgamma(.5, shape = mm.gam.shape, scale = mm.gam.scale)
# Weibull Distribution
qweibull(.5, shape = mm.wbll.k, scale = mm.wbll.lambda)
# Normal Distribution
quantile(sample_dist_norm_gh, c(0.05/2, 1 - 0.05/2))
# Gamma Distribution
quantile(sample_dist_gam_gh, c(0.05/2, 1 - 0.05/2))
# Weibull Distribution
quantile(sample_dist_wbll_gh, c(0.05/2, 1 - 0.05/2))
# Normal Distribution
normal.ll <- function(mean, sd){
fs <- dnorm(x = d1$gh, mean = mean, sd = sd, log = TRUE)
-sum(fs)
}
fit_norm <- mle(
normal.ll,
start = list(mean = 160, sd = 5),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
par(mfrow = c(1,2)); plot(profile(fit_norm), absVal = FALSE)
coef(fit_norm)
# Gamma Distribution
gamma.ll <- function(shape, scale){
fs <- dgamma(x = d1$gh, shape = shape, scale = scale, log = TRUE)
-sum(fs)
}
fit_gamma <- mle(
gamma.ll,
start = list(shape = 482, scale = 0.33),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
par(mfrow = c(1,2)); plot(profile(fit_gamma), absVal = FALSE)
coef(fit_gamma)
# Weibull Distribution
wbll.ll <- function(shape, scale){
fs <- dweibull(x = d1$gh, shape = shape, scale = scale, log = TRUE)
-sum(fs)
}
fit_wbll <- mle(
wbll.ll,
start = list(shape = 10, scale = 6),
method = "L-BFGS-B",
lower = c(0, 0.01)
)
par(mfrow = c(1,2)); plot(profile(fit_wbll), absVal = FALSE)
coef(fit_wbll)
hist(d1$gh, breaks = 100, freq = FALSE, main = "GH of Adult Females; MLE", xlab = "GH")
curve(dnorm(x, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2]), col = "red", lwd = 3, add = TRUE)
curve(dgamma(x, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2]), col = "blue", lwd = 3, add = TRUE)
curve(dweibull(x, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2]), col = "green", lwd = 3, add = TRUE)
legend("topleft", legend = c("Normal", "Gamma", "Weibull"), col = c("red", "blue", "green"), lty = 1:1, cex = 0.8)
plot(ecdf(d1$gh), main = "CDF and eCDF of GH of Adult Females; MLE", lwd = 3)
curve(pnorm(x, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2]), col = "red", lwd = 3, add = TRUE)
curve(pgamma(x, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2]), add = TRUE, col = "blue", lwd = 3)
curve(pweibull(x, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2]), add=TRUE, col = "green", lwd = 3)
legend("topleft", legend = c("eCDF of Height", "Normal CDF", "Gamma CDF", "Weibull CDF"), col = c("black", "red", "blue", "green"), lty = 1:1, cex = 0.8)
# Normal Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$gh, qs)
theo_qs <- qnorm(qs, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Normal Distrbution; MLE",
xlab = "The sample quantile", ylab = "The theoretical Normal distribution quantile")
abline(0,1)
# Gamma Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$gh, qs)
theo_qs <- qgamma(qs, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2])
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Gamma Distrbution; MLE",
xlab = "The sample quantile", ylab = "The theoretical Gamma distribution quantile")
abline(0,1)
# Weibull Distribution
qs <- seq(0.05, 0.95, length = 50)
sample_qs <- quantile(d1$gh, qs)
theo_qs <- qweibull(qs, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2])
plot(sample_qs, theo_qs, pch = 16, main = "QQ plot for sample distribution and estimated Weibull Distrbution; MLE",
xlab = "The sample quantile", ylab = "The theoretical Weibull distribution quantile")
abline(0,1)
# Sample Median
median(d1$gh)
# Normal Distribution
qnorm(.5, mean = coef(fit_norm)[1], sd = coef(fit_norm)[2])
# Gamma Distribution
qgamma(.5, shape = coef(fit_gamma)[1], scale = coef(fit_gamma)[2])
# Weibull Distribution
qweibull(.5, shape = coef(fit_wbll)[1], scale = coef(fit_wbll)[2])
# Sample Median
median(d1$ht)
# Normal Distribution
qnorm(.5, mean = mm.norm.mean, sd = mm.norm.sd)
# Gamma Distribution
qgamma(.5, shape = mm.gam.shape, scale = mm.gam.scale)
# Weibull Distribution
qweibull(.5, shape = mm.wbll.k, scale = mm.wbll.lambda)
